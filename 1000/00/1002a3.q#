namespace Solution {
    open Microsoft.Quantum.Primitive;
    open Microsoft.Quantum.Canon;

    operation Solve (qs: Qubit[], bits0: Bool[], bits1: Bool[]) : () {
        let n = Length(qs);

        mutable p = -1;
        for (i in 0..n-1) {
            if (bits0[i] != bits1[i]) {
                if (p == -1) {
                    H(qs[i]);
                } else {
                    CNOT(qs[p], qs[i]);
                }

                set p = i;
            }
        }

        for (i in 0..n-1) {
            if (bits0[i] == true) {
                X(qs[i]);
            }
        }
    }
}
